import nodemailer from "nodemailer";

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∑–∞ ABV SMTP
const transporter = nodemailer.createTransport({
  host: "smtp.abv.bg",
  port: 465, // SSL –ø–æ—Ä—Ç
  secure: true, // –∏–∑–ø–æ–ª–∑–≤–∞–º–µ SSL
  auth: {
    user: process.env.EMAIL_USER, // –≤–∞—à–∏—è—Ç ABV –∏–º–µ–π–ª
    pass: process.env.EMAIL_PASS, // –ø–∞—Ä–æ–ª–∞ –∏–ª–∏ app password
  },
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ SMTP –≤—Ä—ä–∑–∫–∞—Ç–∞
transporter.verify((error, success) => {
  if (error) {
    console.error("‚ùå SMTP –≤—Ä—ä–∑–∫–∞—Ç–∞ –∫—ä–º ABV –Ω–µ –µ –≤–∞–ª–∏–¥–Ω–∞:", error);
  } else {
    console.log("‚úÖ SMTP –≤—Ä—ä–∑–∫–∞—Ç–∞ –∫—ä–º ABV –µ –≥–æ—Ç–æ–≤–∞ –∑–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∏–º–µ–π–ª–∏");
  }
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∏–º–µ–π–ª
export const –∏–∑–ø—Ä–∞—Ç–∏–ò–º–µ–π–ª–ü–æ—Ä—ä—á–∫–∞ = async (–¥–∞–Ω–Ω–∏–ó–∞–ü–æ—Ä—ä—á–∫–∞) => {
  const { –∏–º–µ, –∏–º–µ–π–ª, —Ç–µ–ª–µ—Ñ–æ–Ω, –ø—Ä–æ–¥—É–∫—Ç–∏, –æ–±—â–æ } = –¥–∞–Ω–Ω–∏–ó–∞–ü–æ—Ä—ä—á–∫–∞;

  if (!–ø—Ä–æ–¥—É–∫—Ç–∏ || !Array.isArray(–ø—Ä–æ–¥—É–∫—Ç–∏) || –ø—Ä–æ–¥—É–∫—Ç–∏.length === 0) {
    console.warn("‚ö†Ô∏è products –Ω–µ –µ –≤–∞–ª–∏–¥–µ–Ω –º–∞—Å–∏–≤, –∏–º–µ–π–ª—ä—Ç –Ω—è–º–∞ –¥–∞ —Å–µ –∏–∑–ø—Ä–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ.");
    return;
  }

  const —Å–ø–∏—Å—ä–∫–ü—Ä–æ–¥—É–∫—Ç–∏ = –ø—Ä–æ–¥—É–∫—Ç–∏
    .map((p) => `${p.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω –ø—Ä–æ–¥—É–∫—Ç"} x${p.quantity || 0}`)
    .join("\n");

  const mailOptions = {
    from: `"Bisante" <${process.env.EMAIL_USER}>`,
    to: process.env.NOTIFY_EMAIL, // –∏–º–µ–π–ª –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–º–æ–∂–µ –¥–∞ –µ —Å—ä—â–∏—è—Ç ABV)
    subject: "üõí –ù–æ–≤–∞ –ø–æ—Ä—ä—á–∫–∞ –≤ —Å–∞–π—Ç–∞",
    text: `
–ù–æ–≤–∞ –ø–æ—Ä—ä—á–∫–∞:

–ò–º–µ: ${–∏–º–µ || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}
–¢–µ–ª–µ—Ñ–æ–Ω: ${—Ç–µ–ª–µ—Ñ–æ–Ω || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"}
–ò–º–µ–π–ª: ${–∏–º–µ–π–ª || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"}

–ü—Ä–æ–¥—É–∫—Ç–∏:
${—Å–ø–∏—Å—ä–∫–ü—Ä–æ–¥—É–∫—Ç–∏}

–û–±—â–æ: ${–æ–±—â–æ || 0} –ª–≤.
    `,
  };

  try {
    const info = await transporter.sendMail(mailOptions);
    console.log("‚úÖ –ò–º–µ–π–ª—ä—Ç –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω —É—Å–ø–µ—à–Ω–æ:", info.response);
  } catch (err) {
    console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∏–º–µ–π–ª –∫—ä–º ABV:", err);
  }
};


